<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BattleInv</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>obj_Pause</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic Variables
display = true;     //controls if the player is done with the action
draw_set_font(ft_HUD);
draw_set_color(c_white);

//A script that creates the items in the inv
//The variable here is used to see if an action is done
itemNum = script_execute(scr_displayInventory,280,10);

//spawns the exit option
instance_create(room_width/2+250,room_height/2 - 100,obj_exitMenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Similar to the pause menu, but less information is shown
if(display == true){
    var width = room_width/2;
    var height = (room_height/2) - 60;
    var countItem = 0;
    draw_self();
    draw_text(width - 30,height - 50, "Inventory");
    for(i = 0; i &lt; obj_Player.maxInvSlots; i += 1){
        if(obj_Player.inventory[i,0] != ""){
            draw_text(30,height+(30*i),obj_Player.inventory[i,0]);   //Draws name of item
            draw_text(width - 170,height+(30*i),obj_Player.inventory[i,1]);  //Draws description
            countItem++
        }
    }
    if(countItem != itemNum){ //if an item is used, the inventory dissapears and battle mode continues
        display = false;
        with(obj_battleMode){
            displayOptions = false;
            canSelect = true;
            alreadyMoved = true;
        }
    }
}
else{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>160,160</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
