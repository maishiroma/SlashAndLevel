<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PauseMenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic Variables
display = false;    //determins if the pause screen is displayed
draw_set_font(ft_HUD);
draw_set_color(c_white);

//A script that creates the items in the inv
script_execute(scr_displayInventory,280,78);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display status
if(display == true){
    var width = room_width/2;
    var height = (room_height/2) - 60;
    draw_self();
    draw_text(width - 30,height - 145, "Status Menu");
    draw_text(width + 60,height+10, "Left click an item icon to use it!")
    draw_text(width + 60,height+30, "Right click an item icon to toss it!");
    draw_text(20,height - 120,"Level: " + string(obj_Player.currLevel));
    draw_text(20,height - 90,"Health: " + string(obj_Player.currHealth) + "/" + string(obj_Player.maxHealth));
    draw_text(20,height - 60,"Current Exp: " + string(obj_Player.currExp));
    draw_text(20,height - 30,"To Next Level: " + string(obj_Player.expToNextLevel - obj_Player.currExp));
    draw_text(20,height,"Equipped Weapon: " + obj_Player.equippedWeapon);
    draw_text(width + 50, height - 90, "Wallet: $" + string(obj_Player.currMoney));
    draw_text(width + 50,height - 60, "Raw Power: " + string(obj_Player.attPow));
    draw_text(width + 50,height - 30, "With Weapon Power: " + string(obj_Player.attWithWeaponPow));
    draw_text(width - 30,height + 30,"Inventory");
    for(i = 0; i &lt; obj_Player.maxInvSlots; i += 1){
        if(obj_Player.inventory[i,0] != ""){
            draw_text(30,height+70+(30*i),obj_Player.inventory[i,0]);   //Draws name of item
            draw_text(width - 170,height+70+(30*i),obj_Player.inventory[i,1]);  //Draws description
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>160,160</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
