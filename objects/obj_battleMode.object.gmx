<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BattleScreen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables to control the menu

displayOptions = true;      //This will determine if the player can select an option on the menu.
                            //This turns off when the player made an action
createdObjects = false;     //Controls the option objects being made
inProgress = false;         //Checks if the battle script is already running
canSelect = true;           //for item options, shuts off all other interaction with options
alreadyMoved = false;       //This checks if the player used an item or failed to flee as their turn
enemyDefeat = false;        //Checks if the player won the battle and activates the victory script

draw_set_font(ft_HUD);
draw_set_color(c_white);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Here's the bulk of the work of the object.
//After a turn passed, displayOptions will be reactivated, allowing access to the options again.
if(enemyDefeat == false){
    if(displayOptions == true){//It first checks if you can choose an option.
        if(createdObjects == false){
          instance_create(x+250,y+60,obj_ItemOption);//Spawns fight option
          instance_create(x+350,y+60,obj_RunOption);//spawns item option
          instance_create(x+300,y+100,obj_FightOption);//spawns run option
          createdObjects = true;//This prevents from the options from ever being spawned again
       }
       else{
            instance_activate_object(obj_FightOption);
            instance_activate_object(obj_ItemOption);
            instance_activate_object(obj_RunOption);
            //reactivate the three option objects to prepare for selection
            inProgress = false;
       }
        var left_c = mouse_check_button_released(mb_left);
        if(canSelect == true){
            if(position_meeting(mouse_x,mouse_y,(obj_FightOption))){
                effect_create_above(ef_ellipse,obj_FightOption.x,obj_FightOption.y,0.2,c_yellow);
                if(left_c == 1){
                    displayOptions = false;
                }
            }
            else if(position_meeting(mouse_x,mouse_y,(obj_ItemOption))){
                effect_create_above(ef_ellipse,obj_ItemOption.x,obj_ItemOption.y,0.2,c_yellow);
                if(left_c == 1){
                    instance_create(room_width/2,room_height/2+20,obj_BattleInv);
                    canSelect = false;
                }
            }
           else if(position_meeting(mouse_x,mouse_y,(obj_RunOption))){
            effect_create_above(ef_ellipse,obj_RunOption.x,obj_RunOption.y,0.2,c_yellow);
                if(left_c == 1){
                    script_execute(scr_runAwayOption,obj_Player,self);
                    displayOptions = false;
                    alreadyMoved = true;
                }
            }
        }
    }
    else{
        if(inProgress == false){
            inProgress = true;
            instance_deactivate_object(obj_FightOption);
            instance_deactivate_object(obj_ItemOption);
            instance_deactivate_object(obj_RunOption); 
            //Deactivate the three options to prevent selecting an option
            //A script plays to enact the battle!
            script_execute(scr_BattleTurn,obj_Player,obj_Enemy,self);
        }
        
    }
}
else{
    script_execute(scr_victoryBattle,obj_Player,self,obj_Enemy);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draws the GUI depending on what's happening
draw_self();
//If the player can choose options
if(displayOptions == true){
    //For now, the x and y are meaningless. 
   draw_text(x+70,y+10,"What will the player do?");
   draw_text(x+10,y+45,"Health: " +  string(obj_Player.currHealth) + "/" + string(obj_Player.maxHealth));
   draw_text(x+10,y+65,"Level: " + string(obj_Player.currLevel));
   draw_text(x+10,y+85,"Power: " + string(obj_Player.attWithWeaponPow));
   //The other side of the menu will have the enemy's stats
   draw_text(x+460,y+15,string(obj_Enemy.characterName) + "'s Status");
   draw_text(x+460,y+45,"Health: " +  string(obj_Enemy.currHealth) + "/" + string(obj_Enemy.maxHealth));
   draw_text(x+460,y+65,"Level: " + string(obj_Enemy.currLevel));
   draw_text(x+460,y+85,"Power: " + string(obj_Enemy.attWithWeaponPow));
}
else{
//This will display the flavor text of the battle as characters do actions. 

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>320,64</point>
    <point>320,320</point>
  </PhysicsShapePoints>
</object>
